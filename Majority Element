Naive solution by using hashing but it takes o(n) time and space complexity. so we should use another algorithm name Boyer-Moore Algorithm 
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        h={}
        for i in range(len(nums)):
            if nums[i] in h:
                h[nums[i]]+=1
            else:
                h[nums[i]]=1
        
        for key in h:
            if h[key]>len(nums)//2:
                return key
        
